#!/bin/bash
set -euf -o pipefail
cd "$(dirname "$0")"
source ./config

rcmd(){ ssh "$TARGET_HOST" "$@"; }

if [[ -n "$(git status --porcelain)" ]]; then
  echo "Dirty working tree; aborting." >&2
  exit 1
fi

echo "Checking out source..."
mkdir -p "$WORKROOT"
version=$(git describe --always)
workdir=$(readlink -f "$(mktemp -d "$WORKROOT/$version.XXXX")")
git submodule --quiet foreach "
  git archive --format tar --prefix build/\${name##*/}/ \$sha1 | tar -x -C $workdir
"

echo "Building front-end..."
(
  cd "$workdir/build/davisgig.org"
  npm install
  bower install
  gulp init build --production
)

echo "Staging..."
mkdir "$workdir/stage"
cp -lR "$workdir/build/davisgig.org/build/prod" "$workdir/stage/www"
cp -lR "$workdir/build/api.davisgig.org" "$workdir/stage/api"
chmod -R +rX,-w "$workdir/stage"
echo "Staged to $workdir/stage"

echo "Deploying..."
rcmd mkdir -p "$TARGET_DIR"
releasedir=$(rcmd mktemp -d "$TARGET_DIR/$version.XXXX")
rsync --progress -ayy --link-dest="$TARGET_DIR/latest" \
  "$workdir/stage/" "$TARGET_HOST:$releasedir/"
restart_api=
if ! (rcmd diff -qr "$releasedir/api" "$TARGET_DIR/latest/api"); then
  rcmd /srv/davisgig/venv/bin/pip install -r "$releasedir/api/requirements.txt"
  restart_api=y
fi
rcmd ln -sfT "$releasedir" "$TARGET_DIR/latest"
if [[ -n "$restart_api" ]]; then
  rcmd sudo /etc/init.d/supervisor restart
fi
echo "Deployed to $TARGET_HOST:$releasedir"
